{%- assign product = section.settings.product -%}
<style>
  @media (max-width: 1024px) {
    .h-between-lg-auto {
      min-height: auto;
    }
  }
</style>
<script>
  window.p_img = new Array()
  window.RESELLERS = new Array()
  {% for variant in product.variants %}
    {% assign option = variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' %}
    {% if option == 'dark' %}window.p_img['{{ option }}'] = ["{{ variant.image.src | img_url: 'master' }}"]
    {% elsif option == 'white' %}window.p_img['{{ option }}'] = ["{{ variant.image.src | img_url: 'master' }}"]{% endif %}
    {% if variant.metafields.my_fields.resellers %}window.RESELLERS['{{ option }}'] = {{ variant.metafields.my_fields.resellers }}{% endif %}
  {% endfor %}
</script>
{% if product.selected_variant %}
  {%- assign current_variant = product.selected_variant -%}
{% else %}
  {%- assign current_variant = product.variants.first -%}
{% endif %}
<section class="product-wrap px-1 px-sm-0 as-product-spare-parts as-location-target is-{{ current_variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' }}"
  data-color="{{ current_variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' }}">
  
  <div class="container-topic px-3 px-sm-6">
    <div class="h-between-lg-auto container-fits-viewport row g-0 z-index-1 position-relative">
      <div class="position-relative col-12 col-lg-8 col-xl-9 align-self-center text-center mb-4 mb-lg-0">
        <img loading="lazy" class="img-fluid as-img" src="{{ current_variant.image.src | img_url: 'master' }}" alt="">
      </div>
      <div class="position-relative position-lg-absolute end-0 col-12 col-lg-4 col-xl-3">
        <div class="mx-n3 mx-sm-0">
          <div class="mx-n1 mx-sm-0">
            <div class="h-between-lg-auto section-with-mask container-fits-viewport w-100 pb-2 px-3 p-sm-0 d-flex align-items-end align-items-sm-center">
              <div class="w-100 px-1 pb-2 p-sm-0">
                <h1 class="mb-0 fs-h1">{{ product.title }}</h1>
                {% if section.settings.lead_graph != blank %}
                <div class="d-inline-block mt-n-small"><div class="d-inline-block mt-n-small"><div class="d-inline-block mt-n-small"><div class="d-inline-block mt-n-small"><div class="d-inline-block mt-n-small">
                  <div class="mt-5">{{ section.settings.lead_graph | replace: '<p', '<p class="mb-0"' | replace: '<a', '<a class="text-decoration-underline"' }}</div>
                </div></div></div></div></div>
                {% endif %}

                <div class="mt-5 icon-carbonneutral w-100"></div>

                {% for variant in product.variants %}
                {% assign option = variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' %}
                <div class="as-info-{{ option }} {% if variant.id == current_variant.id %}d-block{% else %}d-none{% endif %}">
                  {% unless variant.metafields.my_fields.hide_purchase_and_notify %}
                  <div class="mt-5 text-uppercase as-gtm-product-checkout">{{ variant.price | money }}</div>
                  {% if variant.metafields.my_fields.shipping_info != blank %}
                  <p class="font-size-sm mb-0 mt-1 text-uppercase">{{ variant.metafields.my_fields.shipping_info | newline_to_br }}</p>
                  {% endif %}
                  {% endunless %}
                </div>
                {% endfor %}

                <div class="mt-5 mb-1 pb-1 d-none">
                  {% for variant in product.variants %}
                  {% assign option = variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' %}
                  <p class="font-size-sm mb-0 text-uppercase as-color-{{ option }}{% if variant.id == current_variant.id %}{% else %} d-none{% endif %}">
                    {{ variant.option1 }}
                  </p>
                  {% endfor %}
                </div>
                
                <div class="mt-5 row g-0 mx-n1 mx-sm-n2">
                  {% for variant in product.variants %}
                  {% assign option = variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' %}
                  <div class="position-relative col-6 px-1 px-sm-2">
                    <input class="step-option as-step-option form-check-input d-none" type="radio" name="option-{{ product.id }}"
                      id="option-{{ product.id }}-{{ forloop.index0 }}" value="{{ option }}" {% if
                      variant.id==current_variant.id %}checked{% else %}{% endif %}>
                    <label class="position-relative form-check-label {{ variant.metafields.my_fields.option | downcase }}" for="option-{{ product.id }}-{{ forloop.index0 }}"
                      >
                      {{ variant.option1 }}
                      <span class="visually-hidden">{{ option }}</span>
                    </label>
                  </div>
                  {% endfor %}
                </div>

                {% for variant in product.variants %}
                {% assign option = variant.metafields.my_fields.option | downcase | replace: 'black', 'dark' %}
                <div class="as-{{ option }} {% if variant.id == current_variant.id %}d-block{% else %}d-none{% endif %}">
                  {% unless variant.metafields.my_fields.hide_purchase_and_notify %}
                  <div class="mt-sm-2 pt-2">
                    {% if variant.metafields.my_fields.third_party_purchase_link != blank %}
                    <a class="as-static-buy-now w-100 font-55 btn btn-danger text-uppercase as-gtm-product-checkout" target="_blank"
                      rel="noopener noreferrer" href="{{variant.metafields.my_fields.third_party_purchase_link}}">{{
                      'products.product.buy_now' | t }}</a>
                    {% else %}
                    {% if variant.available %}
                    {% if variant.metafields.my_fields.invitation_code %}
                    {% render 'product-voucher-code', color: 'white', current_variant: variant %}
                    {% else %}
                    <button class="as-static-buy-now w-100 {% unless variant.available %}invisible{% endunless %} as-empty-add-to-cart font-55 btn btn-danger mt-n-small text-uppercase as-gtm-product-checkout" 
                      data-id="{{ variant.id }}"
                      data-option="{{ option }}"
                      data-bs-toggle="offcanvas" 
                      data-bs-target="#offcanvas-cart" 
                      aria-controls="offcanvas-cart"
                      >{{ 'products.product.add_to_cart' | t }}</button>
                    {%- comment -%}
                    <a class="{% unless variant.available %}invisible{% endunless %} font-55 btn btn-white text-uppercase as-gtm-product-checkout"
                      href="{{ routes.cart_url }}/{{ variant.id }}:1">{{ 'products.product.buy_now' | t }}</a>
                    {%- endcomment -%}
                    {% endif %}
                    {% else %}
                    {% render 'product-sign-up' %}
                    {% endif %}
                    {% endif %}
                  </div>
                  {% endunless %}

                  <div class="mt-5 as-resells d-none">
                    <label class="text-uppercase mb-3">{{ 'products.resellers.title' | t }}</label>
                    <div class="d-flex font-base">
                      <div class="flex-grow-1">
                        <div class="d-flex position-relative contact-dropdown-wrap as-category-wrap">
                          <a class="h-35 contact-dropdown bg-transparent cursor-pointer d-flex text-decoration-none w-100"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <span
                              class="as-category-text form-control d-flex align-items-center">
                              {{ 'products.resellers.select' | t }}
                            </span>
                            <span class="form-control w-auto border-start-0 flex-center px-1">
                              {% render 'icon-chevron-down' %}
                            </span>
                          </a>
                          <ul class="dropdown-menu py-0 as-resells-ul w-100 bg-white border-0"
                            style="max-height: 18.75rem;overflow-y: scroll;">

                          </ul>
                          <script type="text/template" id="as-{{ option }}-resells-tpl">
                          {% raw %}
                            {{#data}}
                            <li>
                              <a class="px-1 dropdown-item text-uppercase nav-link cursor-pointer" href='{{link}}' target="_blank" rel="noopener">{{ name }}</a>
                            </li>
                            {{/data}}
                          {% endraw %}
                          </script>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script>

const Product = new class {
  constructor ($parent) {
    if(!$parent) return
    this.$parent = $parent
    // herder
    this.$header = document.querySelector('.as-site-header')

    this.$img = this.$parent.querySelector('.as-img')

    this.$zoomPlus = this.$parent.querySelector('.as-zoom-plus')
    this.$zoomMinus = this.$parent.querySelector('.as-zoom-minus')
    this.zoomLevel = 0
    this.zoomLevelMax = 5

    this.$rotatePlus = this.$parent.querySelector('.as-rotate-plus')
    this.$rotateMinus = this.$parent.querySelector('.as-rotate-minus')
    this.$rotateContinue = this.$parent.querySelector('.as-rotate-continue')
    this.autoRotateTime = 50

    this.curKey = this.$parent.dataset.color
    this.imgArr = window.p_img
    
    this.rotateIndex = 0
    this.rotateIndexMax = this.imgArr[this.curKey].length
    
    this.startX = 0
    this.SCROLL = 15 // 滑动50px 切换一张图片
    this.canscroll = true // 是否可以滑动切换, 两个手指以上不可滑动切换 

    // 判断是否发送 ga 事件
    // 当鼠标拖动时，给定可以发送的状态； 鼠标放开时，发送
    // 移动端同理
    this.sendGa = false 

    this.wW = document.documentElement.clientWidth

    this.init()
  }

  init() {
    this.updateImgSrc(this.imgArr[this.curKey][0])
    this.loadAllImg()
    this.handleOption()
  }

  handledResize() {
    window.addEventListener('resize', () => {
      this.wW = document.documentElement.clientWidth
    })
  }

  // 动态加载所有图片
  loadAllImg() {
    let times = 0
    for(var k in this.imgArr){
      this.imgArr[k].map(val => {
        let img = new Image()
        img.src = val
      })
    }
  }

  // 切换变体动态加载所有图片
  reloadAllImg(curKey) {
    this.curKey = curKey
  }

  // 处理变体选择事件
  handleOption(){
    var that = this
    var $options = that.$parent.querySelectorAll('.as-step-option')
    if($options) {
      for(var i = 0; i < $options.length; i++) {
        $options[i].addEventListener('click', function(){
          for(var j = 0; j < $options.length; j++) {
            (function(j) {
              if($options[j].checked){
                that.$parent.querySelector('.as-' + $options[j].value).classList.remove('d-none')
                that.$parent.querySelector('.as-info-' + $options[j].value).classList.remove('d-none')
                that.$parent.querySelector('.as-color-' + $options[j].value).classList.remove('d-none')
                that.rotateIndex = 0
                that.rotateIndexMax = that.imgArr[$options[j].value].length
                that.startX = 0
                that.$parent.classList.add('is-' + $options[j].value)
                that.$parent.dataset.color = $options[j].value
                that.updateImgSrc(that.imgArr[$options[j].value][0])
                that.reloadAllImg($options[j].value)
                // if ($options[j].value == 'white') {
                //   that.$header.classList.add('is-white')
                //   that.$header.classList.remove('is-dark')
                // } else if ($options[j].value == 'dark') {
                //   that.$header.classList.remove('is-white')
                //   that.$header.classList.add('is-dark')
                // } else {}
              }else{
                that.$parent.querySelector('.as-' + $options[j].value).classList.add('d-none')
                that.$parent.querySelector('.as-info-' + $options[j].value).classList.add('d-none')
                that.$parent.querySelector('.as-color-' + $options[j].value).classList.add('d-none')
                that.$parent.classList.remove('is-' + $options[j].value)
              }
            })(j)
          }
        })
      }
    }
  }
  
  // 更换 img src
  updateImgSrc(src) {
    this.$img && (this.$img.srcset = src)
    this.$img && (this.$img.src = src)
  }
}(document.querySelector('.as-product-spare-parts'))


</script>
{% schema %}
{
  "name": "Spare parts",
  "class": "snap-child as-snap-list font-base position-relative overflow-hidden my-7 my-lg-0",
  "tag": "section",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "richtext",
      "id": "lead_graph",
      "label": "Lead paragraph"
    }
  ]
}
{% endschema %}